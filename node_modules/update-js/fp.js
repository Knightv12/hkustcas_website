"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = updateFp;

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

updateFp["with"] = updateFpWith;
updateFp.unshift = updateFpUnshift;
updateFp.prepend = updateFpUnshift;
updateFp.shift = updateFpShift;
updateFp.push = updateFpPush;
updateFp.add = updateFpPush;
updateFp.pop = updateFpPop;
updateFp.remove = updateFpRemove;
updateFp.assign = updateFpAssign;
updateFp.del = updateFpDel;

function updateFp() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return function update(obj) {
    return _index["default"].apply(null, [obj].concat(args));
  };
}

function updateFpWith() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return function updateFpWith(obj) {
    return _index["default"]["with"].apply(null, [obj].concat(args));
  };
}

function updateFpUnshift() {
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  return function updateUnshift(obj) {
    return _index["default"].unshift.apply(null, [obj].concat(args));
  };
}

function updateFpShift() {
  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    args[_key4] = arguments[_key4];
  }

  return function updateShift(obj) {
    return _index["default"].shift.apply(null, [obj].concat(args));
  };
}

function updateFpPush() {
  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    args[_key5] = arguments[_key5];
  }

  return function updatePush(obj) {
    return _index["default"].push.apply(null, [obj].concat(args));
  };
}

function updateFpPop() {
  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  return function updatePop(obj) {
    return _index["default"].pop.apply(null, [obj].concat(args));
  };
}

function updateFpRemove() {
  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
    args[_key7] = arguments[_key7];
  }

  return function updateRemove(obj) {
    return _index["default"].remove.apply(null, [obj].concat(args));
  };
}

function updateFpAssign() {
  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
    args[_key8] = arguments[_key8];
  }

  return function updateAssign(obj) {
    return _index["default"].assign.apply(null, [obj].concat(args));
  };
}

function updateFpDel() {
  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
    args[_key9] = arguments[_key9];
  }

  return function updateDel(obj) {
    return _index["default"].del.apply(null, [obj].concat(args));
  };
}